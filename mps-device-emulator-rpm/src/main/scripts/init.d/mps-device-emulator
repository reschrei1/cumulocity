#!/bin/bash
#
# mps-device-emulator Startup script for the MPS Device Emulator
#
# chkconfig: 345 86 14
# description: Cumulocity Demo component
# processname: java
# pidfile: /var/run/cumulocity-demo.pid

### BEGIN INIT INFO
# Provides: java
# Required-Start: $network $syslog
# Required-Stop: $network $syslog
# Default-Start: 3 4 5
# Default-Stop: 0 1 2 6
# Short-Description: start and stop cumulocity-demo-karaf
### END INIT INFO

# Source function library.
# There is no such script on Ubuntu
#. /etc/init.d/functions


# set JAVA_HOME for Ubuntu/CentOS
JAVA_HOME_UBUNTU=/usr/lib/jvm/java-6-sun
JAVA_HOME_CENTOS=/usr/java/default

if [ -x $JAVA_HOME_UBUNTU/bin/java ]; then
    export JAVA_HOME=$JAVA_HOME_UBUNTU
elif [ -x $JAVA_HOME_CENTOS/bin/java ]; then
    export JAVA_HOME=$JAVA_HOME_CENTOS
fi

if [ -z "$JAVA_HOME" ]; then
    echo -n "Cannot set JAVA_HOME env."
else
    export PATH=$PATH:$JAVA_HOME/bin
fi


# check if port 8091 is ready to use
emulator_process_running() {
	ps aux | grep mps-device-emulator | grep java > /dev/null
	RUNNING=$?
}

chome=/usr/share/mps-device-emulator
prog="mps-device-emulator"

start() {
	emulator_process_running
	if [ $RUNNING -eq 0 ]; then
	    echo -n "$prog process is already running."
	else
	    echo -n $"Starting $prog: "
            $chome/bin/start
        fi
}
stop() {
        echo -n $"Stopping $prog: "
        $chome/bin/stop
}
status() {
        echo $"Status $prog: "
	emulator_process_running
	if [ "$RUNNING" -eq 0 ]; then
	    echo "$prog is running"
      return 0
	else
	    echo "There's no $prog process running"
		  return 1
	fi
}

# See how we were called.
case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  status)
        status $prog
        ;;
  restart)
			  stop
			  start
			  ;;
  *)
        echo $"Usage: $0 {start|stop|status}"
        exit 1
esac

exit $?

